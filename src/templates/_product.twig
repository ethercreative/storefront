{# TODO: Move styles into stylesheet #}
<style>
	.shopify-wrap {
		padding: 27px;
		box-shadow: 0 0 0 1px rgba(63,63,68,.05), 0 1px 3px 0 rgba(63,63,68,.15);
		border-radius: 3px;
	}
	.shopify-flex {
		display: flex;
		align-items: flex-start;
	}
	.shopify-flex img {
		width: 200px;
		height: 200px;
		margin-right: 24px;
		vertical-align: middle;
		border: .1rem solid #dfe3e8;
		background-color: #f9fafb;
		border-radius: 3px;
		object-fit: contain;
		overflow: hidden;
	}
	.shopify-details {
		width: 100%;
		flex-shrink: 9999;
	}
	.shopify-details header {
		display: flex;
		align-items: flex-start;
		justify-content: space-between;
	}
	.shopify-details h1 {
		margin-bottom: 7px;
	}
	.shopify-price {
		margin-bottom: 14px;

		color: #646464;
		font-size: 16px;
		text-transform: uppercase;
	}
	.shopify-stock {
		color: #00b007;
	}
	.shopify-stock span {
		display: inline-block;
		padding: 3px 5px;
		min-width: 1rem;
		text-align: center;
		background-color: rgba(0, 176, 7, 0.05);
		border-radius: 3px;
	}
	.shopify-stock.out {
		color: #da5a47;
	}
	.shopify-stock.out span {
		background-color: rgba(218, 90, 71, 0.05);
	}
	.shopify-variants {
		width: 100%;
		margin-top: 24px;
		overflow: auto;

		box-shadow: 0 0 0 1px rgba(63,63,68,.05), 0 1px 3px 0 rgba(63,63,68,.15);
		border-radius: 3px;
	}
	.shopify-variants table {
		width: 100%;
	}
	.shopify-variants th,
	.shopify-variants td {
		padding: 12px 8px;
	}
	.shopify-variants th:first-child,
	.shopify-variants td:first-child {
		width: 50px;
		padding-left: 20px;
	}
	.shopify-variants th:last-child,
	.shopify-variants td:last-child {
		padding-right: 20px;
		text-align: right;
	}
	.shopify-variants tr td {
		border-top: 1px solid #e3e5e8;
	}
	.shopify-variants tr:hover td {
		background-color: rgba(223,227,232,.3);
	}
	.shopify-variants img {
		width: 50px;
		height: 50px;
		vertical-align: middle;
		background-color: #f9fafb;
		border-radius: 3px;
		object-fit: contain;
		overflow: hidden;
	}
	.shopify-variants .img {
		display: flex;
		width: 50px;
		height: 50px;
		justify-content: center;
		align-items: center;
		background-color: #f9fafb;
		border: 1px solid #dfe3e8;
		border-radius: 3px;
	}
	.shopify-variants .img svg {
		width: 28px;
		height: 28px;
		fill: #c4cdd5;
	}
	.shopify-sku {
		font-family: "Consolas", "Bitstream Vera Sans Mono", "Courier New", Courier, monospace;
	}
</style>

{# We clear all caches using the product ID when the product is updated #}
{% cache using key id %}
{# gql is the name of the variable #}
{# with {} is an optional object of variables #}
{# as admin means run this command using the admin api rather than the storefront api #}
{% set variantsPerPage = 250 %}
{% set variantFragment %}
	fragment Variant on ProductVariant {
		id
		sku
		title
		image {
			altText
			transformedSrc
		}
		price
		quantity: inventoryQuantity
		options: selectedOptions {
			name
			value
		}
	}
{% endset %}

{% shopify gql with {
	id: id
} as admin %}
	query GetProduct ($id: ID!) {
		product (id: $id) {
			id
			title
			descriptionHtml
			featuredImage {
				transformedSrc
				altText
			}
			price: priceRange {
				min: minVariantPrice {
					amount
					code: currencyCode
				}
				max: maxVariantPrice {
					amount
				}
			}
			hasOutOfStockVariants
			totalInventory
			totalVariants
			hasOnlyDefaultVariant
			variants (first: {{ variantsPerPage }}) {
				edges {
					cursor
					node {
						...Variant
					}
				}
				pageInfo {
					hasNextPage
				}
			}
		}
	}
	{{ variantFragment }}
{% endshopify %}

<div id="storefront-tab-shopify" class="hidden">
	{% if 'errors' in gql|keys %}
		<div class="shopify-wrap">
			<h3 style="color:#da5a47">Something went wrong!</h3>
			<ul class="errors">
				{% for error in gql.errors %}
					<li>{{ error.message }}</li>
				{% endfor %}
			</ul>
		</div>
	{% else %}
		{% set product = gql.data.product %}
		<div class="shopify-wrap">
			<div class="shopify-flex">
				{% if product.featuredImage %}
					<img
						src="{{ product.featuredImage.transformedSrc }}"
						alt="{{ product.featuredImage.altText }}"
					/>
				{% endif %}
				<div class="shopify-details">
					<header>
						<div>
							<h1>{{ product.title }}</h1>

							<div class="shopify-price">
								{% set price = product.price %}
								{% set min = price.min.amount / 100 %}
								{% set max = price.max.amount / 100 %}
								{% set code = price.min.code %}
								{% if min == max %}
									{{ code }} {{ min|currency(code, stripZeros=true) }}
								{% else %}
									{{ code }} {{ min|currency(code, stripZeros=true) }} - {{ max|currency(code, stripZeros=true) }}
								{% endif %}
							</div>

							{% if product.hasOutOfStockVariants %}
								<div class="shopify-stock out">
									{% if product.totalInventory > 0 and not product.hasOnlyDefaultVariant %}
										Some variants are out of stock
									{% else %}
										Out of stock
									{% endif %}
								</div>
							{% else %}
								<div class="shopify-stock">
									{% if product.hasOnlyDefaultVariant %}
										<strong>{{ product.totalInventory }}</strong>
										in stock
									{% else %}
										In stock
									{% endif %}
								</div>
							{% endif %}
						</div>

						<div>
							<a href="{{ craft.storefront.getProductEditUrl(product.id) }}" target="_blank" class="btn secondary" data-icon-after="share">
								View on Shopify
							</a>
						</div>
					</header>

					{% if product.descriptionHtml %}
						<hr>
						{{ product.descriptionHtml|raw }}
					{% endif %}
				</div>
			</div>
		</div>

		{% set variants = product.variants.edges %}
		{% if not product.hasOnlyDefaultVariant and product.variants.pageInfo.hasNextPage %}
			{% set total = (product.totalVariants / variantsPerPage)|round(1, 'ceil') %}
			{% set cursor = (variants|last).cursor %}
			{% for i in 2..total %}
				{% shopify v with {
					id: id,
					cursor: cursor,
				} as admin %}
					query GetProductVariants ($id: ID!, $cursor: String) {
						product (id: $id) {
							variants (first: {{ variantsPerPage }}, after: $cursor) {
								edges {
									cursor
									node {
										...Variant
									}
								}
								pageInfo {
									hasNextPage
								}
							}
						}
					}
					{{ variantFragment }}
				{% endshopify %}
				{% if 'errors' not in v|keys %}
					{% set variants = variants|merge(v.data.product.variants.edges) %}
					{% if v.data.product.variants.pageInfo.hasNextPage %}
						{% set cursor = (variants|last).cursor %}
					{% else %}
						{% set cursor = null %}
					{% endif %}
				{% endif %}
			{% endfor %}
		{% endif %}

		{% if not product.hasOnlyDefaultVariant %}
			{% set options = craft.storefront.getOptionLabelsFromVariant(product.variants.edges[0].node) %}
			<div class="shopify-variants">
				<table>
					<thead>
					<tr>
						<th></th>
						{% for label in options %}
							<th>{{ label }}</th>
						{% endfor %}
						<th>Price</th>
						<th>Quantity</th>
						<th>SKU</th>
						<th></th>
					</tr>
					</thead>
					<tbody>
					{% for edge in variants %}
						{% set variant = edge.node %}
						<tr>
							<td>
								{% if variant.image %}
									<img
										src="{{ variant.image.transformedSrc }}"
										alt="{{ variant.image.altText }}"
									/>
								{% else %}
									<span class="img">
										<svg viewBox="0 0 20 20">
											<path fill="none" d="M14 9l-5 5-3-2-5 3v4h18v-6z"></path>
											<path d="M19 0H1a1 1 0 0 0-1 1v18a1 1 0 0 0 1 1h18a1 1 0 0 0 1-1V1a1 1 0 0 0-1-1zM8 6c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm0 4c1.654 0 3-1.346 3-3S9.654 4 8 4 5 5.346 5 7s1.346 3 3 3zm-6 8v-2.434l3.972-2.383 2.473 1.65c.398.264.925.21 1.262-.126l4.367-4.367L18 13.48V18H2zM18 2v8.92l-3.375-2.7a.999.999 0 0 0-1.332.073l-4.42 4.42-2.318-1.545a1 1 0 0 0-1.07-.025L2 13.233V2h16z"></path>
										</svg>
									</span>
								{% endif %}
							</td>
							{% for opt in variant.options %}
								<td>{{ opt.value }}</td>
							{% endfor %}
							<td>{{ variant.price|currency(product.price.min.code, stripZeros=true) }}</td>
							<td class="shopify-stock{{ variant.quantity == 0 ? ' out' }}">
								<span>{{ variant.quantity }}</span>
							</td>
							<td class="shopify-sku">{{ variant.sku }}</td>
							<td>
								<a href="{{ craft.storefront.getVariantEditUrl(product.id, variant.id) }}" class="btn" target="_blank">
									Edit
								</a>
							</td>
						</tr>
					{% endfor %}
					</tbody>
				</table>
			</div>
		{% endif %}
	{% endif %}
</div>
{% endcache %}
